trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  BuildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build
  pool: Azure
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: DotNetCoreCLI@1
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: src/Web/WebDrapo
        verbose: false
    - task: gulp@0
      displayName: 'gulp buildDrapoLib:tslint'
      inputs:
        gulpFile: src/Web/WebDrapo/gulpfile.js
        targets: 'buildDrapoLib:tslint'
    - task: DotNetCoreCLI@1
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@1
      displayName: Test
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
      enabled: false
    - task: DotNetCoreCLI@1
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: false
    - task: NuGetCommand@2
      displayName: 'NuGet pack'
      inputs:
        command: pack
        packagesToPack: '**\*.nuspec'
        versioningScheme: byBuildNumber
    - task: NuGetCommand@2
      displayName: 'NuGet push VSTS'
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        publishVstsFeed: '716f73eb-2942-4cb4-811d-b2f48cf0c105'
    - task: NuGetCommand@2
      displayName: 'NuGet push nuget'
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        nuGetFeedType: external
        publishFeedCredentials: nuget
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
    - task: DotNetCoreCLI@1
      displayName: 'Publish Docker'
      inputs:
        command: publish
        arguments: '--configuration $(BuildConfiguration) --output published'
        zipAfterPublish: false
    - task: PowerShell@2
      displayName: 'remove drapo/demo image'
      inputs:
        targetType: 'inline'
        script: 'docker rmi drapo/demo --force'
      continueOnError: true
    - task: Docker@2
      displayName: 'docker build drapo/demo image'
      inputs:
        containerRegistry: 'docker'
        repository: 'drapo/demo'
        command: 'build'
        dockerFile: '**/published/**/*Dockerfile'
        tags: latest
    - task: PowerShell@2
      displayName: 'docker push drapo/demo'
      inputs:
        targetType: 'inline'
        script: 'docker push drapo/demo'